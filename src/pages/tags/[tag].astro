---
import type { GetStaticPaths } from "astro";
import type { Post } from "../../types";
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPostList from "../../components/BlogPostList.astro";

type Props = {
  posts: Post[];
};

export const getStaticPaths = (async () => {
  // @ts-expect-error typing problem with MarkdownInstance
  const allPosts: Post[] = await Astro.glob("../posts/*.md");

  const uniqueTags = [
    ...new Set(
      allPosts
        .map((post) => (post.frontmatter.tags ? post.frontmatter.tags : []))
        .flat(),
    ),
  ];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.frontmatter.tags?.includes(tag),
    );

    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}) satisfies GetStaticPaths;

const { tag } = Astro.params as { tag: string };
const { posts } = Astro.props;
---

<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <BlogPostList posts={posts} />
</BaseLayout>
